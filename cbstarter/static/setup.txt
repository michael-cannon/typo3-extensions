config {
	### Items included in TSref order for convenience.
	### For more details, see TSref at: http://typo3.org/documentation/document-library/doc_core_tsref/quot_CONFIG_quot/

	extTarget = {$config.extTarget}
	intTarget = {$config.intTarget}

	renderCharset = {$config.renderCharset}
	metaCharset = {$config.metaCharset}
	doctype = {$config.doctype}
	xhtmlDoctype = {$config.doctype}
	xmlprologue = {$config.xmlprologue}
	htmlTag_langKey = {$config.htmlTag_langKey}

	spamProtectEmailAddresses = {$config.spamProtectEmailAddresses}
	spamProtectEmailAddresses_atSubst = {$config.spamProtectEmailAddresses_atSubst}
	spamProtectEmailAddresses_lastDotSubst = {$config.spamProtectEmailAddresses_lastDotSubst}
	typolinkEnableLinksAcrossDomains = {$config.typolinkEnableLinksAcrossDomains}
	content_from_pid_allowOutsideDomain = {$config.content_from_pid_allowOutsideDomain}

	meaningfulTempFilePrefix = {$config.meaningfulTempFilePrefix}

	simulateStaticDocuments_addTitle = {$config.simulateStaticDocuments_addTitle}
	simulateStaticDocuments_noTypeIfNoTitle = {$config.simulateStaticDocuments_noTypeIfNoTitle}
	simulateStaticDocuments_pEnc = {$config.simulateStaticDocuments_pEnc}
	simulateStaticDocuments_pEnc_onlyP = {$config.simulateStaticDocuments_pEnc_onlyP}

	pageTitleFirst = {$config.pageTitleFirst}

	redirectOldLinksToNew = {$config.redirectOldLinksToNew}
	admPanel = {$config.admPanel}

	xhtml_cleaning = {$config.xhtml_cleaning}

	# for correct links with multiple domains
	typolinkCheckRootline = {$config.typolinkCheckRootline}

	# Send UTF-8 Notification Email Headers
	notification_email_charset = {$config.notification_email_charset}
	notification_email_encoding = {$config.notification_email_encoding}
	notification_email_urlmode = {$config.notification_email_urlmode}

	index_enable = {$config.index_enable}
	index_externals = {$config.index_externals}

	language = {$plugin.tx_staticinfotables_pi1.languageCode}
	disablePrefixComment = {$config.disablePrefixComment}
	headerComment = {$config.headerComment}
	sendCacheHeaders = {$config.sendCacheHeaders}
}

### Make headers' markup simpler and add <h6>:
lib.stdheader {
	# remove extra div wrappers
	3.headerClass >

	10 {
		# allow entities in headings
		setCurrent.htmlSpecialChars = 0

		# Sample of tag rewrite
		#1.fontTag = <h1>|</h1>
		#2.fontTag = <h2>|</h2>
		#3.fontTag = <h3>|</h3>
		#4.fontTag = <h4>|</h4>
		#5.fontTag = <h5>|</h5>

		# Sample of new entry
		#6 = TEXT
		#6 {
		#	current = 1
		#	insertData = 1
		#	fontTag = <h6>|</h6>
		#}
	}

	# Make sure there're no annoying divs wrapped around hx elements:
	# alternate csc-header additions
	stdWrap.dataWrap = {$config.headerDataWrap}
}

searchresult.rootPidList = {$config.rootPid}

plugin.tx_indexedsearch {
	search.rootPidList = {$config.rootPid}
	search.detect_sys_domain_records = 1
	show.rules = {$config.show.rules}
	show.advancedSearchLink = {$config.show.advancedSearchLink}
}

page.stylesheet = {$config.stylesheet}

tt_content.stdWrap {
	dataWrap = {$tt_content.stdWrap.dataWrap}
	prefixComment = {$tt_content.stdWrap.prefixComment}
}

lib.parseFunc_RTE {
	nonTypoTagStdWrap.encapsLines {
		remapTag.DIV = {$lib.parseFunc_RTE.nonTypoTagStdWrap.encapsLines.remapTag.DIV}
		nonWrappedTag = {$lib.parseFunc_RTE.nonTypoTagStdWrap.encapsLines.nonWrappedTag}

		# Remove 'class="bodytext"' that's bizarrely applied to EVERY <p> by default
		addAttributes.P.class >
	}

	# Remove class="contenttable"
	externalBlocks.table.stdWrap.HTMLparser >
}

plugin.tt_news {
	general_stdWrap.parseFunc.nonTypoTagStdWrap.encapsLines.nonWrappedTag = {$plugin.tt_news.general_stdWrap.parseFunc.nonTypoTagStdWrap.encapsLines.nonWrappedTag}
	excludeAlreadyDisplayedNews = {$plugin.tt_news.excludeAlreadyDisplayedNews}
	useHRDates = {$plugin.tt_news.useHRDates}
	useHRDatesSingle = {$plugin.tt_news.useHRDatesSingle}
	dontUseBackPid = {$plugin.tt_news.dontUseBackPid}
	listOrderBy = {$plugin.tt_news.listOrderBy}
	catOrderBy = {$plugin.tt_news.catOrderBy}
	usePiBasePagebrowser = {$plugin.tt_news.usePiBasePagebrowser}
	displaySingle.date_stdWrap.strftime = {$plugin.tt_news.displaySingle.date_stdWrap.strftime}
	displaySingle.time_stdWrap.strftime = {$plugin.tt_news.displaySingle.time_stdWrap.strftime}
	displayLatest.date_stdWrap.strftime = {$plugin.tt_news.displayLatest.date_stdWrap.strftime}
	displayLatest.time_stdWrap.strftime = {$plugin.tt_news.displayLatest.time_stdWrap.strftime}
	displayLatest.subheader_stdWrap.crop = {$plugin.tt_news.displayLatest.subheader_stdWrap.crop}
	displayList.date_stdWrap.strftime = {$plugin.tt_news.displayList.date_stdWrap.strftime}
	displayList.time_stdWrap.strftime = {$plugin.tt_news.displayList.time_stdWrap.strftime}
	displayList.subheader_stdWrap.crop = {$plugin.tt_news.displayList.subheader_stdWrap.crop}
	getRelatedCObject.tmp.20.strftime = {$plugin.tt_news.displayRelated.strftime}
	getRelatedCObject.10.1.20.strftime = {$plugin.tt_news.displayRelated.strftime}
	getRelatedCObject.10.2.20.strftime = {$plugin.tt_news.displayRelated.strftime}
	getRelatedCObject.10.default.20.strftime = {$plugin.tt_news.displayRelated.strftime}
	# 20080617 not sure why this isn't working
	getRelatedCObject.10.1.10.typolink.no_cache = 0
	getRelatedCObject.10.2.10.typolink.no_cache = 0
	getRelatedCObject.10.default.10.typolink.no_cache = 0
}


TSFE.jumpUrl_transferSession = 1

tt_content.menu.20.2.includeNotInMenu = {$config.includeNotInMenu}

xmlnews.10 {
	useHRDatesSingle = 1
	dontUseBackPid = 1
}

plugin.tx_templavoila_pi1.disableErrorMessages = {$plugin.tx_templavoila_pi1.disableErrorMessages}

styles.content.links.extTarget = {$config.extTarget}

# show caption only if it exists (prevents empty div with class "csc-textpic-caption")
tt_content.image.20.rendering.div.caption.if.isTrue.field = imagecaption

# remove p tags from table cells
# important: don't wrap these tags in p
lib.parseFunc_RTE.externalBlocks = ul,ol,table

# if table has a class, use it, otherwise class=contenttable
lib.parseFunc_RTE.externalBlocks.table.stdWrap.HTMLparser.tags.table.fixAttrib.class.list >

# allow repeated parsing of table cells - needed for media tags
lib.parseFunc_RTE.externalBlocks.table.HTMLtableCells.default.callRecursive = 1

# allow hyperlinks in table cells
lib.parseFunc_RTE.externalBlocks.table.HTMLtableCells.default.stdWrap.parseFunc {
	makelinks = 1
	makelinks.http.keep = scheme,path,query
	makelinks.mailto.keep = path
	tags {
		link = TEXT
		link {
			current = 1
			typolink.parameter.data = parameters : allParams
		}
	}
}

# Allow embed (Youtube) HTML tags in the RTE
lib.parseFunc_RTE.allowTags := addToList(object,param,embed,iframe,script)

plugin.tx_staticinfotables_pi1 {
	languageCode = {$plugin.tx_staticinfotables_pi1.languageCode}
	countryCode = {$plugin.tx_staticinfotables_pi1.countryCode}
	currencyCode = {$plugin.tx_staticinfotables_pi1.currencyCode}
}
